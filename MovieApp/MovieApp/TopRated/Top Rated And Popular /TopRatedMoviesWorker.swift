//
//  TopRatedMoviesWorker.swift
//  MovieApp
//
//  Created by Thanos on 23/01/20.
//  Copyright (c) 2020 Thanos. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SDWebImage

class TopRatedMoviesWorker
{
   let apiManager = APIManager()
   let databaseManager = DatabaseManager()
    
  func doSomeWork()
  {
  }
    
    func downloadTopRatedMovies(lang: String, page: Int, category: MovieCategory, completion2: @escaping (Bool)-> Void){
        self.apiManager.fetchMovieDetails(lang: lang, page: page, category: category, completion: {
            success in
            
            if success{
                self.fetchMovies(category: category, fetchedMovies: {success in
                    self.fetchMoviesImage()
                    completion2(success)
                })
            }
        })
        
        
    }
    func downloadTopRatedMoviesWithoutLag(lang: String, page: Int, category: MovieCategory, completion2: @escaping (Bool)-> Void){
        self.apiManager.fetchMovieDetails(lang: lang, page: page, category: category, completion: {
            success in
            
            if success{
                self.fetchMovies(category: category, fetchedMovies: {
                    success in
                    self.fetchMoviesImage()
                    completion2(success)
                })
            }
        })
    }
    
    
    func fetchMovies(category: MovieCategory, fetchedMovies: (Bool)-> Void){
        databaseManager.fetchMovieDetails(category: category, completion: {
            success in
            fetchedMovies(success)
        })
    }
    
    func fetchMoviesImage(){
        
        for movie in DatabaseManager.popularMovies{
            
            SDImageCache.shared.queryCacheOperation(forKey: imagDwldBaseURL+movie.posterPath!) { (image, data, cacheType) in
                if let image = image{
                    
                }
                else{
                    SDWebImageDownloader.shared.downloadImage(with: URL(string: imagDwldBaseURL+movie.posterPath!), options: SDWebImageDownloaderOptions.useNSURLCache, progress: nil) { (image, data, error, success) in
                        
                        if let image = image {
                            if success{
                                SDImageCache.shared.store(image, forKey: imagDwldBaseURL+movie.posterPath!, toDisk: true, completion: nil)
                            }
                        }
                        
                        
                    }
                }
                
            }
            
            
        }
    }
}
